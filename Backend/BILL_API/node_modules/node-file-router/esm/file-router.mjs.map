{"version":3,"file":"file-router.mjs","names":["path","process","FileRouteResolver","isFunction","isRecordWith","resolveNotFoundHandler","httpAdapter","validateBaseDirExistence","executeWithMiddlewares","initFileRouter","baseDir","ignoreFilesRegex","clearImportCache","adapter","getPathname","defaultNotFoundHandler","getMethod","normalizedBaseDir","isAbsolute","join","cwd","fileRouteResolver","middlewares","routeHandlers","getHandlers","notFoundHandler","extractMiddlewares","pathname","filter","regexp","test","flatMap","handler","Array","isArray","runHandler","method","args","matchedRoute","find","regex","routeMethod","routeParams","getRouteParams","routeMiddlewares","routeHandler","slice","at","requestHandler","undefined","matchedMiddlewares"],"sources":["../../src/file-router.ts"],"sourcesContent":["import * as path from 'node:path';\nimport * as process from 'node:process';\n\nimport { FileRouteResolver } from './components/file-route-resolver';\nimport { isFunction, isRecordWith } from './utils/object.utils';\nimport { resolveNotFoundHandler } from './components/not-found-resolver';\nimport { httpAdapter } from './adapters/http-adapter';\nimport { validateBaseDirExistence } from './validations/validations';\nimport { executeWithMiddlewares } from './components/middleware-executer';\n\nimport type { Adapter } from './types/adapter';\nimport type { RequestHandler } from './types/request-handlers';\n\ninterface Options {\n  baseDir?: string;\n  ignoreFilesRegex?: RegExp[];\n  adapter?: Adapter;\n  clearImportCache?: boolean;\n}\n\nexport async function initFileRouter({\n  baseDir = 'api',\n  ignoreFilesRegex,\n  clearImportCache = false,\n  adapter = httpAdapter\n}: Options = {}) {\n  const { getPathname, defaultNotFoundHandler, getMethod } = adapter;\n\n  const normalizedBaseDir = path.isAbsolute(baseDir)\n    ? baseDir\n    : path.join(process.cwd(), baseDir);\n\n  await validateBaseDirExistence(normalizedBaseDir);\n\n  const fileRouteResolver = new FileRouteResolver({\n    baseDir: normalizedBaseDir,\n    ignoreFilesRegex,\n    clearImportCache\n  });\n\n  const [middlewares, routeHandlers] = await fileRouteResolver.getHandlers();\n  const notFoundHandler =\n    (await resolveNotFoundHandler(normalizedBaseDir)) || defaultNotFoundHandler;\n\n  function extractMiddlewares(pathname: string) {\n    return middlewares\n      .filter(({ regexp }) => regexp.test(`${pathname}/`))\n      .flatMap(({ handler }) => (Array.isArray(handler) ? handler : [handler]));\n  }\n\n  function runHandler<R>(\n    pathname: string,\n    method: string | undefined,\n    args: unknown[]\n  ) {\n    const matchedRoute = routeHandlers.find(\n      ({ regex, method: routeMethod }) =>\n        regex.test(pathname) && (!routeMethod || method === routeMethod)\n    );\n\n    if (!matchedRoute) {\n      return notFoundHandler(...args);\n    }\n\n    const { handler } = matchedRoute;\n    const routeParams = matchedRoute.getRouteParams(pathname);\n\n    if (isRecordWith<RequestHandler>(handler) && method && handler[method]) {\n      return handler[method](...args, routeParams);\n    }\n\n    if (isFunction(handler)) {\n      return handler(...args, routeParams);\n    }\n\n    if (Array.isArray(handler)) {\n      const [routeMiddlewares, routeHandler] = [\n        handler.slice(0, -1),\n        handler.at(-1)\n      ];\n\n      return executeWithMiddlewares<R>(\n        routeMiddlewares,\n        routeHandler,\n        args,\n        routeParams\n      );\n    }\n\n    return notFoundHandler(...args, routeParams);\n  }\n\n  return function requestHandler<R>(...args: unknown[]) {\n    const pathname = getPathname(...args);\n    const method = getMethod ? getMethod(...args) : undefined;\n    const matchedMiddlewares = extractMiddlewares(pathname);\n\n    return executeWithMiddlewares<R>(\n      matchedMiddlewares,\n      () => runHandler<R>(pathname, method, args),\n      args\n    );\n  };\n}\n"],"mappings":"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"}