export async function executeWithMiddlewares(middlewares, fileRouteHandler, args, routeParams) {
  const handlersQueue = [...middlewares, fileRouteHandler];
  const results = [];
  async function processNext(i = 0) {
    const isMiddlewareHandler = i < handlersQueue.length - 1;
    const isRouteHandler = i === handlersQueue.length - 1;
    if (isMiddlewareHandler) {
      results[i] = await handlersQueue[i](...args, () => processNext(i + 1), routeParams);
    } else if (isRouteHandler) {
      results[i] = await handlersQueue[i](...args, routeParams);
    }
  }
  await processNext();

  // Returns the result of the last successful handler in the chain,
  // not from the first in the call stack.
  return results.pop();
}
//# sourceMappingURL=middleware-executer.mjs.map